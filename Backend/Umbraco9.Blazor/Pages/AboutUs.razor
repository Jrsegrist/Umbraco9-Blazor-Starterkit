@page "/about-us"
@implements IDisposable
@using Microsoft.Extensions.Logging
@using NPoco.fastJSON
@using Umbraco9.Blazor.Services
@using Umbraco9.Core.Models.Pages
@using Umbraco9.Core.Services
@inject PersistentComponentState ApplicationState
@inject IContentDeliveryService ContentDeliveryService
@inject ILogger<AboutUs> logger

<ComponentList Elements="contentData?.Elements" />

@code
{
    private GenericContentPageModel contentData;
    private PersistingComponentStateSubscription persistingSubscription;

    protected override async Task OnInitializedAsync()
    {
        persistingSubscription = ApplicationState.RegisterOnPersisting(PersistData);

        try
        {
            if (!ApplicationState.TryTakeFromJson<string>($"fetchdata", out var restored))
            {

                contentData = await ContentDeliveryService.GetPageOfType<GenericContentPageModel>("about-us");
            }
            else
            {
                contentData = JSON.ToObject<GenericContentPageModel>(restored!);
            }
        }
        catch (Exception ex)
        {
            logger.LogError(ex, "Error loading page data");
        }
    }

    private Task PersistData()
    {
        var prettyJson = JSON.ToNiceJSON(contentData);
        ApplicationState.PersistAsJson("fetchdata", prettyJson);

        return Task.CompletedTask;
    }

    void IDisposable.Dispose()
    {
        persistingSubscription.Dispose();
    }
}
